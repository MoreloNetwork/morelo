name: ci/gh-actions/build

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '**/*.md'
  pull_request:
    paths-ignore:
      - '**/*.md'

env:
  APT_INSTALL: 'sudo apt-get -y install build-essential cmake libboost-all-dev graphviz doxygen libunwind8-dev pkg-config libssl-dev libsodium-dev libhidapi-dev libusb-1.0-0-dev gperf libreadline-dev miniupnpc libunbound-dev libzmq3-dev libnorm-dev libpgm-dev libprotobuf-dev protobuf-compiler ccache'
  APT_SET_CONF: |
    echo "Acquire::Retries \"3\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
    echo "Acquire::http::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
    echo "Acquire::ftp::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
  CCACHE_SETTINGS: |
    ccache --max-size=150M
    ccache --set-config=compression=true
  USE_DEVICE_TREZOR_MANDATORY: ON

jobs:
  windows:
    runs-on: self-hosted
    env:
      CCACHE_TEMPDIR: /tmp/.ccache-temp
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: ccache
      uses: actions/cache@v4
      with:
        path: ~/.ccache
        key: ccache-x86_64-w64-mingw32-${{ github.sha }}
        restore-keys: ccache-x86_64-w64-mingw32
    - name: depends ccache
      uses: actions/cache@v4
      with:
        path: contrib/depends/built
        key: ccache-depends-x86_64-w64-mingw32-${{ hashFiles('contrib/depends/packages/*') }}
        restore-keys: |
          ccache-depends-x86_64-w64-mingw32-${{ hashFiles('contrib/depends/packages/*') }}
          ccache-depends-x86_64-w64-mingw32
    - name: set apt conf
      run: ${{ env.APT_SET_CONF }}
    - name: update apt
      run: sudo apt update
    - name: install dependencies
      run: ${{ env.APT_INSTALL }} libtool autotools-dev automake bsdmainutils curl git ca-certificates python3 g++-mingw-w64-x86-64 qttools5-dev-tools
    - name: prepare toolchain
      run: |
        sudo update-alternatives --set x86_64-w64-mingw32-g++ $(which x86_64-w64-mingw32-g++-posix)
        sudo update-alternatives --set x86_64-w64-mingw32-gcc $(which x86_64-w64-mingw32-gcc-posix)
    - name: build
      run: |
        ${{ env.CCACHE_SETTINGS }}
        make depends target=x86_64-w64-mingw32 buildtag=win-x64 -j2
    - name: package
      run: |
        cd /home/runner/work/morelo/morelo/build/release/bin
        zip -9 /tmp/win-x64.zip morelo*
        cd /tmp
        mv win-x64.zip $(sha256sum win-x64.zip | cut -d " " -f 1).zip
    - uses: actions/upload-artifact@v4
      with:
        name: win-x64
        path: '/tmp/*.zip'
        compression-level: 0

  linux:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-24.04, ubuntu-22.04 ]
    env:
      CCACHE_TEMPDIR: /tmp/.ccache-temp
      BUILD_NAME: ${{ matrix.os == 'ubuntu-24.04' && 'ubuntu24' || 'ubuntu22' }}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - uses: actions/cache@v4
      with:
        path: ~/.ccache
        key: ccache-${{ runner.os }}-build-${{ matrix.os }}-${{ github.sha }}
        restore-keys: ccache-${{ runner.os }}-build-${{ matrix.os }}
    - name: remove bundled boost
      run: sudo rm -rf /usr/local/share/boost
    - name: set apt conf
      run: ${{ env.APT_SET_CONF }}
    - name: update apt
      run: sudo apt-get update
    - name: install dependencies
      run: ${{ env.APT_INSTALL }}
    - name: build
      run: |
        ${{ env.CCACHE_SETTINGS }}
        make -j2 release-${{ env.BUILD_NAME }}
    - name: package
      run: |
        cd /home/runner/work/morelo/morelo/build/release/bin
        tar cJf /tmp/linux-x64-${{ env.BUILD_NAME }}.tar.xz morelo*
        cd /tmp
        mv linux-x64-${{ env.BUILD_NAME }}.tar.xz $(sha256sum linux-x64-${{ env.BUILD_NAME }}.tar.xz | cut -d " " -f 1).tar.xz
    - name: upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-x64-${{ env.BUILD_NAME }}
        path: '/tmp/*.tar.xz'
        compression-level: 0
