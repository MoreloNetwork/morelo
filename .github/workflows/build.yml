name: ci/gh-actions/build

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '**/*.md'
  pull_request:
    paths-ignore:
      - '**/*.md'

env:
  CCACHE_SETTINGS: |
    ccache --max-size=150M
    ccache --set-config=compression=true
  USE_DEVICE_TREZOR_MANDATORY: ON

jobs:
  windows:
    runs-on: windows-latest
    env:
      CCACHE_TEMPDIR: C:\Users\runneradmin\.ccache-temp
      CCACHE_DIR: C:\Users\runneradmin\.ccache
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - uses: actions/cache@v4
      with:
        path: C:\Users\runneradmin\.ccache
        key: ccache-${{ runner.os }}-build-${{ github.sha }}
        restore-keys: ccache-${{ runner.os }}-build
    - uses: msys2/setup-msys2@v2
      with:
        update: true
        install: mingw-w64-x86_64-toolchain make mingw-w64-x86_64-cmake mingw-w64-x86_64-ccache mingw-w64-x86_64-boost mingw-w64-x86_64-openssl mingw-w64-x86_64-zeromq mingw-w64-x86_64-libsodium mingw-w64-x86_64-hidapi mingw-w64-x86_64-libusb mingw-w64-x86_64-unbound git mingw-w64-x86_64-graphviz mingw-w64-x86_64-doxygen mingw-w64-x86_64-libunwind mingw-w64-x86_64-pkgconf mingw-w64-x86_64-gperf mingw-w64-x86_64-readline mingw-w64-x86_64-miniupnpc mingw-w64-x86_64-protobuf ccache mingw-w64-x86_64-make protobuf
    - name: build
      run: |
        ${{env.CCACHE_SETTINGS}}
        make release-static-win-x86_64 -j2

  windows2:
    runs-on: windows-latest
    env:
      CCACHE_TEMPDIR: C:\Users\runneradmin\.ccache-temp
      CCACHE_DIR: C:\Users\runneradmin\.ccache
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - uses: actions/cache@v4
      with:
        path: C:\Users\runneradmin\.ccache
        key: ccache-${{ runner.os }}-build-${{ github.sha }}
        restore-keys: ccache-${{ runner.os }}-build
    - uses: msys2/setup-msys2@v2
      with:
        update: true
        install: mingw-w64-x86_64-toolchain make mingw-w64-x86_64-cmake mingw-w64-x86_64-ccache mingw-w64-x86_64-boost mingw-w64-x86_64-openssl mingw-w64-x86_64-zeromq mingw-w64-x86_64-libsodium mingw-w64-x86_64-hidapi mingw-w64-x86_64-libusb mingw-w64-x86_64-unbound git mingw-w64-x86_64-graphviz mingw-w64-x86_64-doxygen mingw-w64-x86_64-libunwind mingw-w64-x86_64-pkgconf mingw-w64-x86_64-gperf mingw-w64-x86_64-readline mingw-w64-x86_64-miniupnpc mingw-w64-x86_64-protobuf ccache mingw-w64-x86_64-make protobuf
    - name: build
      run: |
        ${{env.CCACHE_SETTINGS}}
        make release-win-x86_64 -j2

  linux:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-24.04, ubuntu-22.04, ubuntu-20.04 ]
    env:
      CCACHE_TEMPDIR: /tmp/.ccache-temp
      BUILD_NAME: ${{ matrix.os == 'ubuntu-24.04' && 'ubuntu24' || ( matrix.os == 'ubuntu-22.04' && 'ubuntu22' || 'ubuntu20' ) }}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - uses: actions/cache@v4
      with:
        path: ~/.ccache
        key: ccache-${{ runner.os }}-build-${{ matrix.os }}-${{ github.sha }}
        restore-keys: ccache-${{ runner.os }}-build-${{ matrix.os }}
    - name: remove bundled boost
      run: sudo rm -rf /usr/local/share/boost
    - name: set apt conf
      run: |
        echo "Acquire::Retries \"3\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::http::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::ftp::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
    - name: update apt
      run: sudo apt update
    - name: install morelo dependencies
      run: sudo apt-get -y install build-essential cmake libboost-all-dev graphviz doxygen libunwind8-dev pkg-config libssl-dev libsodium-dev libhidapi-dev libusb-1.0-0-dev gperf libreadline-dev miniupnpc libunbound-dev libzmq3-dev libnorm-dev libpgm-dev libprotobuf-dev protobuf-compiler ccache
    - name: build
      run: |
        ${{ env.CCACHE_SETTINGS }}
        make -j2 release-${{ env.BUILD_NAME }}
    - name: upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.BUILD_NAME }}-release
        path: '/home/runner/work/morelo/morelo/build/release/bin/morelo*'
